openapi: 3.0.0
info:
  title: Banking API
  description: API for managing accounts and transactions in a banking system.
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local development server
paths:
  /v1/accounts:
    post:
      summary: Create a new account
      description: Creates a new account and returns the account ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreationRecord'
      responses:
        '200':
          description: Account created successfully
          content:
            application/json:
              schema:
                type: string
                example: "123"
        '400':
          description: Invalid input provided
        '409':
          description: Account already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
  /v1/accounts/{accountId}:
    get:
      summary: Get account by ID
      description: Retrieves the details of an account by its ID.
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the account to retrieve
      responses:
        '200':
          description: Account details retrieved successfully
          content:
            application/json:
              schema:
                type: string
                example: "Account details"
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
  /v1/accounts/health:
    get:
      summary: Health check
      description: Verifies the health of the service.
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: string
                example: "OK"
  /v1/transactions:
    post:
      summary: Create a new transaction
      description: Creates a new transaction and returns the transaction ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionCreationRecord'
      responses:
        '201':
          description: Transaction created successfully
          content:
            application/json:
              schema:
                type: integer
                example: 123
        '400':
          description: Invalid input provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Account or operation type not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Transaction already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
  /v1/transactions/{transactionId}:
    get:
      summary: Get transaction by ID
      description: Retrieves the details of a transaction by its ID.
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the transaction to retrieve
      responses:
        '200':
          description: Transaction details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRecord'
        '404':
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
components:
  schemas:
    AccountCreationRecord:
      type: object
      properties:
        documentNumber:
          type: string
          description: The document number associated with the account
    TransactionCreationRecord:
      type: object
      properties:
        accountId:
          type: integer
          description: The ID of the account associated with the transaction
        operationTypeId:
          type: integer
          description: The ID of the operation type
        amount:
          type: number
          format: double
          description: The amount of the transaction
    TransactionRecord:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the transaction
        accountId:
          type: integer
          description: The ID of the account associated with the transaction
        operationTypeId:
          type: integer
          description: The ID of the operation type
        amount:
          type: number
          format: double
          description: The amount of the transaction
        eventDateTime:
          type: string
          format: date-time
          description: The date and time of the transaction
        createdAt:
          type: string
          format: date-time
          description: The date and time when the transaction was created
        updatedAt:
          type: string
          format: date-time
          description: The date and time when the transaction was last updated
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: The error message
        status:
          type: integer
          description: The HTTP status code
        timestamp:
          type: integer
          description: The timestamp when the error occurred